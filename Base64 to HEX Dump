#!/usr/bin/env php
<?php

/*
 * IN: Base64 encoded string
 * OUT: ACSII HEX dump of the Base64 decoded string
 */

function hex_dump($data, $newline="\n")
{
  static $from = '';
  static $to = '';

  static $width = 16; # number of bytes per line

  static $pad = '.'; # padding for non-visible characters

  if ($from==='')
  {
    for ($i=0; $i<=0xFF; $i++)
    {
      $from .= chr($i);
      $to .= ($i >= 0x20 && $i <= 0x7E) ? chr($i) : $pad;
    }
  }

  $hex = str_split(bin2hex($data), $width*2);
  $chars = str_split(strtr($data, $from, $to), $width);

  $offset = 0;
  foreach ($hex as $i => $line)
  {
    echo sprintf('%6X',$offset).' : '.implode(' ', str_split($line,2)) . ' [' . $chars[$i] . ']' . $newline;
    $offset += $width;
  }
}

$in='';
while (!feof(STDIN))
{
    $res = fread(STDIN, 1024);
    if (false === $res)
    {
    	fwrite(STDERR, "error reading from stdin");
	    exit(3);
	}
    $in .= $res;
}
$bin=base64_decode($in);
if (false===$bin)
{
	fwrite(STDERR, "base64_encode failed");
	exit(3);
}

$result=hex_dump($bin);

fwrite(STDOUT, $result);

exit(0);
